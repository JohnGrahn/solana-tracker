"""Add new wallet fields for Helius API data

Revision ID: 633fce383c54
Revises: 28150d16a9c4
Create Date: 2024-07-16 21:07:03.073323

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '633fce383c54'
down_revision = '28150d16a9c4'
branch_labels = None
depends_on = None


def upgrade():
    # Drop foreign key constraints
    op.drop_constraint('user_wallets_wallet_id_fkey', 'user_wallets', type_='foreignkey')
    
    # Drop indexes
    op.drop_index('ix_wallets_address', table_name='wallets')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    
    # Drop tables
    op.drop_table('user_wallets')
    op.drop_table('wallets')
    op.drop_table('users')
    
    # Create new users table
    op.create_table('users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('username', sa.String(length=64), nullable=True),
        sa.Column('email', sa.String(length=120), nullable=True),
        sa.Column('password_hash', sa.String(length=128), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)

    # Create new wallets table with Helius API fields
    op.create_table('wallets',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('address', sa.String(length=44), nullable=True),
        sa.Column('balance', sa.Float(), nullable=True),
        sa.Column('transactions', sa.JSON(), nullable=True),
        sa.Column('token_balances', sa.JSON(), nullable=True),
        sa.Column('additional_info', sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_wallets_address'), 'wallets', ['address'], unique=False)

    # Create new user_wallets table
    op.create_table('user_wallets',
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('wallet_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.ForeignKeyConstraint(['wallet_id'], ['wallets.id'], ),
        sa.PrimaryKeyConstraint('user_id', 'wallet_id')
    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('password_hash', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=False)
    op.create_table('user_wallets',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('wallet_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_wallets_user_id_fkey'),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallets.id'], name='user_wallets_wallet_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'wallet_id', name='user_wallets_pkey')
    )
    op.create_table('wallets',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('address', sa.VARCHAR(length=44), autoincrement=False, nullable=True),
    sa.Column('balance', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='wallets_pkey')
    )
    op.create_index('ix_wallets_address', 'wallets', ['address'], unique=False)
    # ### end Alembic commands ###
